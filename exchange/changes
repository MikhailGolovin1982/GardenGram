cat > docker-compose.yml << 'EOF'
version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: gardengram-postgres
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"   # для Codespaces/локально; внешний доступ можно отключить позже
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: gardengram-redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
EOF




cat > requirements.txt << 'EOF'
Django>=5.0,<6.0
djangorestframework>=3.15,<4.0
djangorestframework-simplejwt>=5.3,<6.0
drf-spectacular>=0.27,<1.0
django-cors-headers>=4.4,<5.0
python-dotenv>=1.0,<2.0
psycopg2-binary>=2.9,<3.0
gunicorn>=21.2,<22.0
whitenoise>=6.6,<7.0
EOF




# .gitignore (если ещё не добавлял)
cat > .gitignore << 'EOF'
# Python / Django
__pycache__/
*.py[cod]
*.egg-info/
.venv/
.env
*.sqlite3
staticfiles/
media/

# Node / RN
node_modules/
.expo/
dist/
build/

# OS / IDE
.DS_Store
Thumbs.db
.vscode/
.idea/
EOF

# .gitattributes на будущее (нормализация переводов строк)
cat > .gitattributes << 'EOF'
* text=auto
*.sh text eol=lf
*.py text eol=lf
*.js text eol=lf
*.ts text eol=lf
*.json text eol=lf
*.yml text eol=lf
EOF
